trigger:
  branches:
    include:
    - '*'

pr:
  branches:
    include:
    - '*'

variables:
  output: "NO_OUTPUT"
  vmImageName: 'ubuntu-latest'
  vmImageName1: 'windows-2022'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: First
  # condition: ne(variables.part, 'databricks')
  displayName: Stage
  dependsOn: []
  jobs:
  - job: First_job
    pool:
      vmImage: ubuntu-latest
    steps:
    - bash: |
        echo "Databricks part"
        echo "a"
        if [ ! -z "$(source_branch)" ]; then
          BranchName="$(source_branch)"
        else
          BranchName=$(System.PullRequest.SourceBranch)
        fi
        echo $(BranchName)
        echo $(Build.SourceBranch)
        echo $(Build.SourceBranchName)
        echo $(Build.Reason)
        echo $(System.PullRequest.SourceBranch) 
        echo $(System.PullRequest.TargetBranch)

- stage: Build_docker
  # condition: ne(variables.part, 'azure_functions')
  displayName: Build the Docker image
  dependsOn: []
  jobs:
  - job: build_docker_image
    displayName: Build the Docker image
    timeoutInMinutes: 0
    condition: ne(variables.ms_hosted_agent, 'ubuntu')
    steps:
    - bash: echo "a"

  - job: build_docker_image_hosted
    displayName: Build the Docker image
    timeoutInMinutes: 0
    pool:
      vmImage: ${{ variables.vmImageName1 }}
    condition: eq(variables.ms_hosted_agent, 'ubuntu')
    steps:
    - bash: |
        echo "Azure functions part"
        echo "a"
